name: For dev Json & png Validation

on:
  push:
    branches:
      - dev
    paths:
      - 'posts/**.json'
      - 'posts/blog/**'
      - 'public/blog/**'
      - 'public/author/**'
      - 'public/basic.png'

permissions:
  contents: write


jobs:
  check-json-png-updated:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get list of commits since last push on dev branch
        id: get_commits
        run: |
          git fetch origin dev
          COMMITS=$(git rev-list ${{ github.event.before }}..${{ github.sha }})
          echo "::set-output name=commits::$COMMITS"
    
      - name: Check if specified paths are updated
        id: check_paths
        run: |
          for COMMIT in ${{ steps.get_commits.outputs.commits }}
          do
            FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
            for FILE in $FILES_CHANGED
            do
              # ここで指定したパスとマッチするか確認します
              if [[ "$FILE" =~ ^posts/.*\.json$ || "$FILE" =~ ^posts/blog/.* || "$FILE" =~ ^public/images/blog/.* || "$FILE" == 'public/basic.png' ]]; then
                echo "::set-output name=update_required::true"
                break 2
              fi
            done
          done

      - name: Validate and rollback if necessary
        if: steps.check_paths.outputs.update_required == 'true'
        run: |
          VALIDATION_FAILED=false
          for COMMIT in ${{ steps.get_commits.outputs.commits }}
          do
            FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
            for FILE in $FILES_CHANGED
            do
              if [[ "$FILE" =~ ^posts/.*\.json$ ]]; then
                # ここでJSONの検証を行います
                if ! cat $FILE | jq empty; then
                  echo "Error: Invalid JSON in $FILE at commit $COMMIT"
                  VALIDATION_FAILED=true
                  break 2
                fi
              fi
            done
          done
      
          if [ "$VALIDATION_FAILED" = true ]; then
            git reset --hard ${{ github.event.before }}
            git push origin HEAD:${{ github.ref }} --force
            exit 1
          fi
      

      - name: Validate and remove non-compliant PNG files
        if: steps.check_paths.outputs.update_required == 'true'
        run: |
          MAX_SIZE=3000000  # 3MB in bytes

          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

          for FILE in public/author/*.png; do
            if [ -f "$FILE" ]; then
              FILE_SIZE=$(stat -c%s "$FILE")
              IMAGE_DIMENSIONS=$(file $FILE | grep -o '[0-9]* x [0-9]*')
              if [ "$IMAGE_DIMENSIONS" != "200 x 200" ]; then
                echo "File $FILE has invalid dimensions ($IMAGE_DIMENSIONS). Deleting..."
                git rm $FILE
                INVALID_FILES_FOUND=true
              fi
            fi
          done
          
          for PATH_PATTERN in 'public/blog/**/**/*.png' 'posts/blog/**/**/*.png'; do
            for FILE in $PATH_PATTERN; do
              if [ -f "$FILE" ]; then
                FILE_SIZE=$(stat -c%s "$FILE")
                if [ $FILE_SIZE -gt $MAX_SIZE ]; then
                  echo "File $FILE is too large ($FILE_SIZE bytes). Deleting..."
                  git rm $FILE
                  INVALID_FILES_FOUND=true
                fi
              fi
            done
          done

          if [ "$INVALID_FILES_FOUND" = true ]; then
            git commit -m "Deleted non-compliant PNG files"
            git push origin HEAD:${{ github.ref }}
          fi