name: JSON Validation

on:
  push:
    branches:
      - dev

jobs:
  check-json-updated:
    runs-on: ubuntu-latest

    outputs:
      updated: ${{ steps.check.outputs.updated }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if JSON files are updated
        id: check
        run: |
          JSON_FILES_CHANGED=$(git show --name-only --pretty="" $GITHUB_SHA | grep "\.json$")
          if [[ -z "$JSON_FILES_CHANGED" ]]; then
            echo "No JSON files were updated."
            echo "::set-output name=updated::false"
          else
            echo "::set-output name=updated::true"
          fi

  validate:
    needs: check-json-updated
    if: needs.check-json-updated.outputs.updated == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Output the commit message of B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          COMMIT_MESSAGE=$(git log HEAD~2 -n 1 --pretty=format:"%s")
          echo "Commit message of B: $COMMIT_MESSAGE"
          COMMIT_MESSAGE=$(git log HEAD~1 -n 1 --pretty=format:"%s")
          echo "Commit message of B: $COMMIT_MESSAGE"

      - name: Validate updated JSON files
        run: |
          git show --name-only --pretty="" $GITHUB_SHA

          if [ $? -eq 0 ]; then
              echo "No JSON files were changed."
              exit 0
          fi

          JSON_FILES_CHANGED=$(git show --name-only --pretty="" $GITHUB_SHA | grep "\.json$")

          if [ -z "$JSON_FILES_CHANGED" ]; then
              echo "No JSON files were changed."
              exit 0
          else
              for file in $JSON_FILES_CHANGED; do
                  echo "Validating $file..."
                  if ! cat $file | jq empty; then
                      echo "Error: Invalid JSON in $file"
                      exit 1
                  fi
              done
          fi

      
      - name: Revert commit on failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          git revert HEAD~1
          git push https://${{ env.GITHUB_TOKEN }}@github.com/yomogyhub/yomogy_test.git HEAD:dev --force
